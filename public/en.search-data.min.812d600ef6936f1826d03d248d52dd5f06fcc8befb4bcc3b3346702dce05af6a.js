'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/','title':"Recent Posts",'content':"p test\n"});index.add({'id':1,'href':'/posts/Planning-2020-Beyond-Work-Life-Balance/','title':"Planning 2020 Beyond Work-Life Balance",'content':"A Broken Self and a New Decade With the tingly smell of mulled wine, the dazzling Christmas lights in Berlin streets, I found myself in a very dark place at the end of 2019: it\u0026rsquo;s the end of a decade yet my life is full of loose ends. Trying so hard to be the best version of myself as an instructor, a scholar, and a creator, I had, not literally, untied shoe laces that will trip myself over nothing every single day.\nI think I am not alone in this: the yearning for multitude of wonderful things ended up as a self-paralyzing force. The world is most ravishing in your fantasies, right? Unfortunately, daydreaming stopped to be pleasant after I realized how little had I done to reach my idealized world––a place that\u0026rsquo;s elegant, profound, gentle and intriguing , a world I would love to be a part of.\nSo I\u0026rsquo;ve picked up all the loose ends and started to sketch a road map to there. And this post is a record of what I have done.\nThe Three-Layer Structure I would like to achieve two seemingly contradictory goals with my organization system: keep track of everything, and don\u0026rsquo;t overwhelm myself. My current workaround is a system with three nesting layers and each layer requires different degree of attention and monitoring (energy!).\nThe outmost layer is areas of life that I would like to balance on a daily basis. These are facet of life that I would make sure to give equal, unbiased energy and resource every single day. For most people, this could be just work and life. Me personally have three areas of life (serious/leisure/misc) which I will discuss in the next section.\nThe mid and second layer is sub-areas of life. They are also important and requires regular attention, but not on a daily basis. For example, I have four sub-areas in serious stuff: publication, academic development, teaching and organization. I would cycle through all these sub-areas every week, but the time invested on each sub-area might be different from week to week.\nThe innermost layer are projects that are SMART (specific, measurable, achievable, relevant, time-bound). They are actionable projects that would help me reaching the vision of a particular sub-area of life. Since they are time sensitive and have clear criteria for success, I can evaluate the process easily every week and month. Next, I would like to put these three layers into context and give them some very subjective definitions.\nIdentify Areas of Life Everything I do, every second I spend and every bit of energy I consume (even in off-state, even during sleeps) is motivated by certain needs. I do serious stuff for professional development, financial security, social status, all of which are necessary to earn a proper position in this society. I do leisure stuff for enjoyment, self fulfillment and human connection. And I do misc stuff for living as a responsible adult that takes care of her own health, finance, possessions, legal docs etc. I used to rank serious stuff \u0026gt; leisure stuff \u0026gt; misc stuff, now I understand (after several burnouts) that they refuel each other, and should be treated equally on a daily basis.\nMy three areas of life may not be everyone\u0026rsquo;s focus, but you can substitute anything that you deem precious and would like to keep a close eye on.\nCreate sub-areas within Areas Using the area of life as a start point, what I did next is to write several statements to descriptive my prospect for each area. For example, I put down \u0026ldquo;I want to be a small expert in my small field\u0026rdquo; in the area of serious stuff, and I then formalized this vision into a sub-area called academic development. Eventually, I have four sub-areas in serious stuff: publication, academic development, teaching and organization; three sub-areas in leisure stuff: output, social, input; and two sub-areas in misc stuff: health (eating, skincare, workout, etc.) and chore (tax, record transaction, shopping, house cleaning, etc.). Noting that the sub-area of chore contains many elements, as they are not my focuses of life right now.\nCreate Projects within sub-areas The distinction between sub-areas and projects lies in whether they can be completed within a time frame. For example, health is a sub-area of my life that needs frequent investment, I cannot tick it off and say it\u0026rsquo;s done. But I may have various projects within this sub-area that can and should be completed after certain duration of time, such as run for 5 km without stop in two months. And in order to reach this very specific goal, I can set concrete to-dos and keep track of its progress.\nHow Does It Work in Real Life? The beauty of this system lies in the differentiated energy requirement for each layer. From area to sub-area to project, the degree of flexibility increase and active monitoring decrease.\nTo be more specific, at the start of a week, I will decide which sub-area(s) in each of the three areas I\u0026rsquo;m going to focus every day. The priority of sub-areas is determined by importance, urgency and sometimes, guts. I will try to work on every sub-area in a week, but not everyday. For instance, I may decide to work on serious\\_publication + leisure\\_input + misc\\_health on Monday, and change to serious\\_teach + leisure\\_output + misc\\_chore on Tuesday, and cycle through each sub-area throughout the week. This can be evaluated by the hour I spent in to-dos for each sub-area and adjusted during weekly review. Completion of a project take time and effort, but I don\u0026rsquo;t have to work on each project every day or every week, as long as it\u0026rsquo;s finished within the time frame defined by the project.\nEssentially, what I need to plan and monitor actively everyday is the time/energy spent on each area. I will review and plan sub-areas only once a week, and for projects, once a month.\nDoes It Work? Honestly, I don\u0026rsquo;t know yet, but this system has given me clarity and a sense of purpose for the past two weeks. It is my current answer to the dilemma of wanting everything and getting burned out along the way. Noting that it is definitely not a manual or solution, but rather a record of my attempt to gather and organize the gruesome but magnificent beast which is life. And as everything in life, it\u0026rsquo;s a work in progress.\nI think I\u0026rsquo;ve learned something along the way, but there\u0026rsquo;s also Rick Sanchez\u0026rsquo;s voice saying “Oh boy, so you actually learned something today? What is this, Full House?”, to which I want to answer: this is my best attempt to make sense of this world. And I hope it could be useful for the anonymous readers out there as well.\n"});index.add({'id':2,'href':'/posts/%E7%9B%AE%E8%89%B2/','title':"目色",'content':"  排雷  乱伦， 未成年，姐弟\n This piece is based on \u0026quot;Inferno\u0026quot; by Tomo Matsumoto\n他睁开了眼睛，几声闷雷滚过，窗玻璃在狂风中振动着。室内昏暗模糊，从他躺的角度能看到迫近的积雨云，正不断变幻着形状。重重堆积的云山，像沉默又饥饿的野兽，边缘却镶着明亮的白色。听着楼下时隐时现的流水声，他突然觉得干渴难忍。\n走廊挂着的时钟指向中午十二点，家中除了厨房却是一片暧昧不明。他昏昏沉沉地走向开放式厨房边上的冰箱。\n这是十六岁的家入轰从九州回到东京的第一个夏天，天气灼热得史无前例。震耳欲聋的蝉鸣和雷声中，连电器运转的声音都显得有气无力。\n他边抹汗边打开冰箱，里面整齐地码着可丽饼、乳酪球和草莓蛋糕。草莓是无子的，茎叶都被仔细摘去并整齐地切成两瓣，盖在白润的奶油上像是颗红心。\n四年过去了，她还是记得我爱吃什么。家入轰看着草莓蛋糕心想。\n她总是这样，无关紧要的细节攥得太紧，对重要的事情却一笑带过。在别人看来是恬淡寡欲，在他眼中却是骇人的天真。他永远不懂那是城府太浅还是太深。\n譬如说，她总是知道他喜欢什么样的甜品。譬如说，她笑着吃掉了那块蛋糕……\n「小更，我再也不要吃草莓蛋糕了。」 十一岁的家入轰一反常态地推开了眼前松软洁白的草莓蛋糕。那时的他还稚嫩清秀，被邻里戏称为小娜塔莉波特曼。\n「难道你要巧克力的么，说吃了就会拉肚子的不知道是哪位啊？」 十二岁的她，眉间挑着点戏谑笑看着轰。\n「说不吃就不吃，把你的巧克力蛋糕给我，我们交换！」 轰语气强硬，眼睛却一直不敢看她。\n她笑着摇了摇头，把彼此的盘子交换过来。\n「不过，小轰你知道么，人会渐渐变得像他吃掉的食物哦。」 她一边舔掉嘴边的奶油一边笑着说，「你看你长得像个洋娃娃一样，都是因为你喜欢吃草莓蛋糕呢。要是吃巧克力的话你知道会怎么样嘛？」\n「什么啊，难道你要说我会变黑么。」 家入轰眼神有意无意地扫过她的嘴唇。她的皮肤光滑白皙得和奶油不分彼此，更衬得微笑着的唇瓣鲜艳欲滴。他看了一眼就不敢再看，视线下移到她面前放着的草莓蛋糕。\n然而草莓蛋糕那柔滑的奶白上几点嫣红，更是像极了昨夜那不能为人道的绮梦。梦中有纠缠濡湿的肢体，白得像上好的乳脂，红得像玫瑰扎出的血珠。心中生出的欲望，心却不明白。家入轰脑中嗡嗡作响，手下捣着蛋糕，不觉间已是一身薄汗。\n「哈哈哈，不是哦，你会变得和巧克力一样苦。」 她对轰的惊惶似乎毫无所知，随便地捏了一下轰的脸颊，仍旧笑得一派悠然。\n真是乌鸦嘴啊。回忆到那天的事情，他不由苦涩得笑了。细想起来，似乎他的痛苦真的从那一刻开始了。并且随着年岁增长而越来越痛，越来越苦。\n不过那之后，她的笑容并没有陪伴他很久。在家入轰弄明白心中蠢动的妄想是什么之前，二人就被分隔两地。东京和九州，坐希望号不过五小时的车程，对两个孩子来说却像天人永隔。那年家入轰十二岁。\n落地窗外一个竖闪霎时打亮阴暗的客厅，雷声接踵而至，比先前的闷雷响亮不少，狂风也卷着沙尘噼里啪啦地打在玻璃上。家入轰拿着蛋糕和罐装咖啡绕过沙发，一屁股坐在了地上。他伸手打开DVD，有一搭没一搭地看起了电影。\n片子是从打工处的斋藤前辈那里借的。说是借有点不对，那天斋藤一脸自以为温暖阳光的傻笑，给正在收银处发呆的自己硬塞了「包你笑到流泪」的影碟。大概是因为自己曾经不小心透露过苦恋的事实，导致这个很容易和人共情的大男孩时不时要以前辈的身份关怀一下他。「喜欢一个人是好事呀，会让人变得温柔和坚强呢。」诸如此类的斋藤语录。\n温柔和坚强都是强者才能享有的特权，自己只是匍匐于欲望和绝望脚下的奴隶而已。家入轰从十二岁那年就明白了这一点。\n「小轰，好好看着我。」分别的那天，她脸上带着一如既往的悠闲笑容，好像只是在送他去上学，「你要记得我的脸哦。」\n「说得就好像我有脸盲一样，你的脸看了十年早就看腻了。」轰的刘海挡住了昨夜哭肿的眼睛，别过头去，直到最后也没再看她一眼。\n然而她随口说的种种戏言却总是一语成籖。\n刚刚迈入初中的家入轰身上糅合着微妙的青涩和超出年龄的忧郁，一张比少女更秀美的脸庞总是能轻松吸引年长的女性。在九州生活的第一个月，家入轰就糊里糊涂地被家教带上了床。\n对方是个高二女生，有着顺滑的黑直长发，说话间总是摆弄着自己的头发：「小轰，你知道きがかん这个词是什么意思嘛？这可是考点哦。」\n「我早就知道了，有人教过我。」\n明明是在学着国语，却不知怎么就唇齿相接，继而滚上了床……\n在下体的酥麻随着碾磨一层层弥漫开来时，他恍恍惚惚地看着身下的女性心想，这就是令小学男生们面红耳赤的「做爱」吗？为什么感觉欠缺了什么？这头长发应该再短一些，颜色也应该是淡一点。一瞬间，正在娇吟的女人变了个样子：将将盖住耳朵的清爽短发在光下泛着淡淡茶色，散落在指缝间勾起丝丝凉滑。肌肤薄透白润，耳廓点染着情动的淡红……随着他的想象，脸转了过来，五官精巧，对称得简直仿若人造。在一阵急似一阵的冲撞下，唇边却挂着不合时宜的悠然笑容：「小轰，不要忘了我的脸。」\n……轰在攀上第一次高潮的瞬间感到了翻江倒海的恶心。眼前一片刺眼的白，耳中却依然回响着她的笑语。\n「小轰，这是初一的考点，给我好好背住，在九州可不要被人比下去哦。きがかん，汉字写作‘飢餓感’，就是腹内空空难以忍受的感觉。」\n没有什么开心，无法变得坚强，只有心中永远饥饿的野兽日夜叫嚣着。兽吃掉了小娜塔莉波特曼的外皮，吃掉了童年对她单纯的依恋，骨骼拔节生长，那个欲望终于破壳而出。他更加地饥饿了。\n草莓蛋糕不知道在冰箱里放了多久，奶油带着若有若无的酸味。按她的性格，一定是刚听说他要回来就去买了吧，一刻都不会耽搁。而又是因为她的性子，就算他没有吃蛋糕，她也一定不会扔掉它，直到坏得不能再坏了为止，直到整个冰箱也被腐败占据。即使如此，最终他还是拿出了蛋糕，一口不落地吞咽下去。\n家入轰感到了久违的反胃。\n屏幕上六个身穿警服的英国男人正随着音乐一边扭动一边脱去衣服，挺着肚腩、光着屁股的形象很是滑稽。不过身份错位所营造的滑稽感离恶心不过一步之遥。明明是喜剧，他眉间却一直打着疙瘩。\n水声停了。「你在看电影吗？」\n随着平稳轻松的问话，是突然接近的温度，和视野边缘散发着诱人光彩的白。她结束了厨房的劳作，擦了手挨着轰在沙发坐下。云层压得愈发低了，空气中像带了静电一样，凝滞而满布危险的吸引力。他只感觉闷热得喘不过气，汗水顺着陡峭的下颌线滚落，啪嗒。\n「是啊，从斋藤君那里借来的。」 他目不斜视，好像完全被屏幕上光着屁股的男人吸引了，然而脸上一丝波动也无。\n「交到朋友了呢，真好，我原本还担心你会不会在超市和人打起来。」 她仰了头看轰。四年过去，现在的她就算坐在沙发上也需要抬起头才能看到轰的脸。\n「说得我好像失足青年一样。」\n「难道不是吗，你现在就是一身大型猫科动物的气场，这么低气压真的没有顾客投诉？啊，说起来你打工是有什么东西想买吗？难道是机车？」 她就像一个好姐姐一样，在轻松的打趣中夹着关心。\n然而这回他没有答话。如果不是知道母亲已经告诉了她自己打工的原因，那么他大概还可以继续装下去。 继续扮演一个略显桀骜叛逆，但骨子里还是普通高一少年的角色。就好像一切阴暗不过是惺惺作态。\n他打工的原因很简单，他需要钱离开这个家，离开这个令他深陷炼狱的女人。\n又一声炸雷，雨终于倾盆而下，室内令人窒息的沉默被无处可逃的雨声打破。\n「啊这个画面看起来好眼熟，电影叫什么名字？」 从轰脸上移开视线，她就像什么也没发生一样挑起了新的话题。\n又来了，那种可怕的天真和淡然交织的情态。\n「The Full Monty」\n「我听说过，好像是经典喜剧？没想到你会特意借这种片子看呢。」 她扫了一眼坐在地上全身戒备着的少年，又向他挪近了些，「我还以为你的事情我全部都知道得很清楚呢。」\n被她清甜的气息笼罩，轰的眼神不由自主地掠过她裸露在外的肌肤，但又小心翼翼不让彼此眼神交汇。因为闷热的缘故她只穿了一件吊带背心，脖颈、肩膀、手臂……全部都很精巧，自己单手就可以抓住那双纤弱的手腕吧，想要粗暴得撕咬那透明的皮肤，就这样一口气用自己的白色玷污那无垢的白会怎么样？轰的妄想突然一拥而上，饥饿的目光如有实体。\n然而他的目光最终停在她纤细的锁骨上，白皙的肌肤起伏中围出一汪阴影，那里卧着一条细致的金色项链，三个小小的十字架嵌在其中。那是他上周送给她的生日礼物。\n​\t一个兽从炼狱中上来，有两角如同羔羊，说话好像龙。\n​\t它的贪婪欲望从来不会得到满足， 它在饱餐后会感到比在饱餐前更加饥肠辘辘。\n能佑护她免被兽亵渎的只有神的印记。\n「你又知道什么。」回过神的轰终于直视了她的眼睛。脑袋清醒后，一股无名怒气陡然升起。\n你能舍弃一切回应我的欲望么？你能和我一起堕入地狱么？我那么努力地戴上伤人伤己的面具，和你保持距离，你却……\n「你根本不知道自己在做什么，什么都不知道。」\n玻璃上成股流下的雨水，无声地哭泣着。\n三年多没见的母亲还是一样酒肉不禁，豪放地在大中午就放开肚皮喝啤酒。飞快成长的少年早就超过了母亲两个头，但是面对这个自由自在的女人时轰还是很敬畏。在学校里成绩优秀、体育全能的家入轰是个很自律的国三学生，身上黑色的中山领制服严谨地系到了最上面一颗扣子。\n母亲一口撸下鸡皮串，一边看着自己的小儿子，笑道：「我的小公主现在真是仪表堂堂，但是这么严肃一点都不好玩，你现在也不会动不动就哭鼻子了吧？」\n「妈，我现在可是篮球队的主力，别瞎操心了。你这次来九州不会就是为了吃烤串吧？」\n「不不，我是为了博多明太子酱来的。」母亲一本正经地说。\n「我才不信。」\n「唉，孩子大了真不好逗，家里的那个也是一样。啊不过，她一向都是一副笑面虎的样子，天知道在想什么。你知道吗她在学校被人取了外号叫圣女呢哈哈哈！」摇头晃脑的母亲又干了一大口。\n轰在桌面下攥起了拳头。\n「好了好了，我说实话吧，其实我和你爸要复婚了。挺不好意思的，老这么折腾你们……所以你高中就来东京上吧。”母亲笑嘻嘻的，一点都不像不好意思的样子。「哎呀，九州的烧鸟果然一绝，要是啤酒能再给劲点就完美了。我给你讲，烧鸟还是要刷蒲烧汁才好，那些只刷味啉的都是邪道。」\n后面的话轰一句都没听到，他像是被闷头几棍，棍棍打中要害，他感到心脏被紧紧攥住，肺叶压缩到极限，大口喘气时眼前一片昏花。\n为什么？为什么？明明在不能向任何人倾诉的欲念中煎熬了不知多久，终于怀着向死的决心，烧去了和她有关的一切，满身疮痍地逃离了她的幻影。好不容易压制了饥饿的野兽，为什么现在却要重新被玩弄于股掌之间？\n家入轰听到了业火劈啪作响的声音。欲海邪山向他倾坠而来。\n「果然家人能够团聚真好呀，小轰你一定很高兴吧？诶你该不是高兴到哭出来了吧？」 母亲又解决了两串烧鸟，完全没察觉儿子身上发生了什么。\n「……是啊，我很幸福。」 轰把脸深深埋进了掌心。\n这个世界充满了幸福，从高久轰变回了家入轰的他，在这一团喜乐中开始痛哭。\n悲伤吗，恐惧吗，恶心吗，绝望吗，\n快活吗，安心吗，满足吗，渴望吗？\n更，小更，家入更。我那血脉相连的姐姐。\n家入轰在铺天盖地的雨声中闭上了眼睛，她的白色持续灼烧着他的视网膜。\n"});index.add({'id':3,'href':'/posts/My-Doom-Emacs-Configuration/','title':"My Doom Emacs Configuaration",'content':"  Figure 1: Emacs main window in iTerm2\n    Figure 2: Emacs quickshow window with Org agenda\n  Intro Forewords  A few words about my background. I\u0026rsquo;m a researcher in the field of social science. I don\u0026rsquo;t program much, but Emacs is essential for both my work and leisure projects. I\u0026rsquo;m using Emacs for interacting with R environment, composing long format texts, and managing my schedule as well as logging everyday life. I\u0026rsquo;m using GNU Emacs under the Doom Emacs configuration framework. I\u0026rsquo;m running my Emacs in iTerm2\u0026ndash;a terminal emulator for macOS.  Instructions  To install GNU Emacs and Doom, run the following in the terminal. References: https://github.com/hlissner/doom-emacs/blob/develop/docs/getting%5Fstarted.org   brew install git ripgrep brew install coreutils fd xcode-select --install brew install emacs git clone https://github.com/hlissner/doom-emacs ~/.emacs.d ~/.emacs.d/bin/doom install  Add export PATH=~/.emacs.d/bin:$PATH in .zshrc to use the bin/doom utility anywhere in terminal Turn on literate in init.el in ~/.dooms.d, then create config.org Add #+PROPERTY: header-args :tangle yes :cache yes :results silent :padline no anywhere in the config.org Run M-x doom/reload in Emacs after changing the config.org, this will extract the Lisp source codes automatically to config.el Run doom sync in terminal every time the package.el is changed How to debug:  turn on toggle-debug-on-error, then doom/reload run doom doctor in terminal    Global Backends Doom default (package-initialize t) (setq user-full-name \u0026#34;Eejain Huang\u0026#34; user-mail-address \u0026#34;huangyizhen2002@gmail.com\u0026#34;) Change the default encoding to UTF-8, more suitable for multi-lan environment (prefer-coding-system \u0026#39;utf-8) (set-default-coding-systems \u0026#39;utf-8) (set-terminal-coding-system \u0026#39;utf-8) (set-keyboard-coding-system \u0026#39;utf-8) (setq default-buffer-file-coding-system \u0026#39;utf-8) Do not create lockfiles for files being edited references: https://github.com/Brettm12345/doom-emacs-literate-config/blob/master/config.org#completioncompany\n(setq create-lockfiles nil) Company config reference: https://github.com/Brettm12345/doom-emacs-literate-config/blob/master/config.org#completioncompany\nSet maximum candidates for company-box (after! company-box (setq company-box-max-candidates 5)) Setup company-perscient (use-package company-prescient :after company :hook (company-mode . company-prescient-mode)) Setup company ui (after! company (setq company-tooltip-limit 5 company-tooltip-minimum-width 80 company-tooltip-minimum 5 company-backends \u0026#39;(company-capf company-dabbrev company-files company-yasnippet) company-global-modes \u0026#39;(not comint-mode erc-mode message-mode help-mode gud-mode))) Ivy config reference: https://github.com/Brettm12345/doom-emacs-literate-config/blob/master/config.org#completioncompany\nSet ripgrep as the default program for ivy project search (setq +ivy-project-search-engines \u0026#39;(rg)) Setup ivy-rich (after! ivy-rich (setq ivy-rich-display-transformers-list \u0026#39;(ivy-switch-buffer (:columns ((ivy-rich-candidate (:width 30 :face bold)) (ivy-rich-switch-buffer-size (:width 7 :face font-lock-doc-face)) (ivy-rich-switch-buffer-indicators (:width 4 :face error :align right)) (ivy-rich-switch-buffer-major-mode (:width 18 :face doom-modeline-buffer-major-mode)) (ivy-rich-switch-buffer-path (:width 50))) :predicate (lambda (cand) (get-buffer cand))) +ivy/switch-workspace-buffer (:columns ((ivy-rich-candidate (:width 30 :face bold)) (ivy-rich-switch-buffer-size (:width 7 :face font-lock-doc-face)) (ivy-rich-switch-buffer-indicators (:width 4 :face error :align right)) (ivy-rich-switch-buffer-major-mode (:width 18 :face doom-modeline-buffer-major-mode)) (ivy-rich-switch-buffer-path (:width 50))) :predicate (lambda (cand) (get-buffer cand))) counsel-M-x (:columns ((counsel-M-x-transformer (:width 40)) (ivy-rich-counsel-function-docstring (:face font-lock-doc-face :width 80)))) counsel-describe-function (:columns ((counsel-describe-function-transformer (:width 40)) (ivy-rich-counsel-function-docstring (:face font-lock-doc-face :width 80)))) counsel-describe-variable (:columns ((counsel-describe-variable-transformer (:width 40)) (ivy-rich-counsel-variable-docstring (:face font-lock-doc-face :width 80)))) counsel-recentf (:columns ((ivy-rich-candidate (:width 100)) (ivy-rich-file-last-modified-time (:face font-lock-doc-face))))))) (after! counsel (setq counsel-evil-registers-height 20 counsel-yank-pop-height 20 counsel-org-goto-face-style \u0026#39;org counsel-org-headline-display-style \u0026#39;title counsel-org-headline-display-tags t counsel-org-headline-display-todo t)) (after! ivy (setq ivy-posframe-parameters `((min-width . 160) (min-height . ,ivy-height) (left-fringe . 0) (right-fringe . 0) (internal-border-width . 10)) ivy-display-functions-alist \u0026#39;((counsel-git-grep) (counsel-grep) (counsel-pt) (counsel-ag) (counsel-rg) (counsel-notmuch) (swiper) (counsel-irony . ivy-display-function-overlay) (ivy-completion-in-region . ivy-display-function-overlay) (t . ivy-posframe-display-at-frame-center)))) (after! ivy (setq ivy-use-selectable-prompt t ivy-auto-select-single-candidate t ivy-rich-parse-remote-buffer nil +ivy-buffer-icons nil ivy-use-virtual-buffers nil ivy-magic-slash-non-match-action \u0026#39;ivy-magic-slash-non-match-cd-selected ivy-height 20 ivy-rich-switch-buffer-name-max-length 50)) Add helpful action to counsel-M-x (after! ivy (ivy-add-actions \u0026#39;counsel-M-x `((\u0026#34;h\u0026#34; +ivy/helpful-function \u0026#34;Helpful\u0026#34;)))) Setup counsel-tramp (use-package counsel-tramp :commands (counsel-tramp)) Setup all-the-icons-ivy (use-package all-the-icons-ivy :after ivy :config (dolist (cmd \u0026#39;( counsel-find-file counsel-file-jump projectile-find-file counsel-projectile-find-file counsel-dired-jump counsel-projectile-find-dir counsel-projectile-switch-project)) (ivy-set-display-transformer cmd #\u0026#39;all-the-icons-ivy-file-transformer))) Dired config reference: https://github.com/Brettm12345/doom-emacs-literate-config/blob/master/config.org#completioncompany\nSet dired-k to use human readable styles (after! dired-k (setq dired-k-human-readable t)) Set dired-k filesize colors (after! dired-k (setq dired-k-size-colors `((1024 . ,(doom-lighten (doom-color \u0026#39;green) 0.3)) (2048 . ,(doom-lighten (doom-color \u0026#39;green) 0.2)) (3072 . ,(doom-lighten (doom-color \u0026#39;green) 0.1)) (5120 . ,(doom-color \u0026#39;green)) (10240 . ,(doom-lighten (doom-color \u0026#39;yellow) 0.2)) (20480 . ,(doom-lighten (doom-color \u0026#39;yellow) 0.1)) (40960 . ,(doom-color \u0026#39;yellow)) (102400 . ,(doom-lighten (doom-color \u0026#39;orange) 0.2)) (262144 . ,(doom-lighten (doom-color \u0026#39;orange) 0.1)) (524288 . ,(doom-color \u0026#39;orange))))) Enable diredfl-mode on dired buffers (use-package diredfl :hook (dired-mode . diredfl-mode)) Setup peep-dired (use-package peep-dired :after dired :defer t :commands (peep-dired)) Global Looks Color scheme and font (setq doom-font (font-spec :faimily \u0026#34;monospace\u0026#34; :size 14)) (setq doom-theme \u0026#39;doom-tomorrow-night) (setq display-line-numbers-style \u0026#39;relative) Set up cursor shape in iterm emacs for indicating edit/normal mode the cursor shape of different vim mode is identical by default. use package term-cursor\n(use-package term-cursor) (global-term-cursor-mode) Function to set visual line width references: https://www.emacswiki.org/emacs/VisualLineMode\n(defvar visual-wrap-column nil) (defun set-visual-wrap-column (new-wrap-column \u0026amp;optional buffer) \u0026#34;Force visual line wrap at NEW-WRAP-COLUMN in BUFFER (defaults to current buffer) by setting the right-hand margin on every window that displays BUFFER. A value of NIL or 0 for NEW-WRAP-COLUMN disables this behavior.\u0026#34; (interactive (list (read-number \u0026#34;New visual wrap column, 0 to disable: \u0026#34; (or visual-wrap-column fill-column 0)))) (if (and (numberp new-wrap-column) (zerop new-wrap-column)) (setq new-wrap-column nil)) (with-current-buffer (or buffer (current-buffer)) (visual-line-mode t) (set (make-local-variable \u0026#39;visual-wrap-column) new-wrap-column) (add-hook \u0026#39;window-configuration-change-hook \u0026#39;update-visual-wrap-column nil t) (let ((windows (get-buffer-window-list))) (while windows (when (window-live-p (car windows)) (with-selected-window (car windows) (update-visual-wrap-column))) (setq windows (cdr windows)))))) (defun update-visual-wrap-column () (if (not visual-wrap-column) (set-window-margins nil nil) (let* ((current-margins (window-margins)) (right-margin (or (cdr current-margins) 0)) (current-width (window-width)) (current-available (+ current-width right-margin))) (if (\u0026lt;= current-available visual-wrap-column) (set-window-margins nil (car current-margins)) (set-window-margins nil (car current-margins) (- current-available visual-wrap-column)))))) Global Editing Key binding for Emacs in iTerm2 environment https://stackoverflow.com/questions/10660060/how-do-i-bind-c-in-emacs/40222318#40222318 workflow: in iterm, set preferences-key add a keyboard short cut with emacs key binding, then choose Send Escape Sequence as the Action, then use the my/global-map-and-set-key funtion below to bind the short cut to the original emacs function (find out the function by running describe the key function) the current key map in iterm is saved in iterm_emacs.itermkeymap\n;; define function (defun my/global-map-and-set-key (key command \u0026amp;optional prefix suffix) \u0026#34;`my/map-key\u0026#39;KEY then `global-set-key\u0026#39;KEY with COMMAND. PREFIX or SUFFIX can wrap the key when passing to `global-set-key\u0026#39;.\u0026#34; (my/map-key key) (global-set-key (kbd (concat prefix key suffix)) command)) (defun my/map-key (key) \u0026#34;Map KEY from escape sequence \\\u0026#34;\\e[emacs-KEY\\.\u0026#34; (define-key function-key-map (concat \u0026#34;\\e[emacs-\u0026#34; key) (kbd key))) ;; the most important remapping, M-x (my/global-map-and-set-key \u0026#34;M-x\u0026#34; \u0026#39;counsel-M-x) ;; comment/uncomment: first bind a new key sequence C-/ (subsitute s-/) for commenting codes, then map iterm key to emacs (map! (:after evil :m \u0026#34;C-/\u0026#34; #\u0026#39;evilnc-comment-or-uncomment-lines)) (my/global-map-and-set-key \u0026#34;C-/\u0026#34; \u0026#39;evilnc-comment-or-uncomment-lines) ;; copy, cut, paste (my/global-map-and-set-key \u0026#34;s-x\u0026#34; \u0026#39;kill-region) (my/global-map-and-set-key \u0026#34;s-c\u0026#34; \u0026#39;evil-yank) (my/global-map-and-set-key \u0026#34;s-v\u0026#34; \u0026#39;evil-paste-after) ;; create new heading below: first change the default keybinding (s-return) to M-return (map! (:after evil :m \u0026#34;\u0026lt;M-return\u0026gt;\u0026#34; #\u0026#39;+default/newline-below)) (my/global-map-and-set-key \u0026#34;\u0026lt;M-return\u0026gt;\u0026#34; \u0026#39;+default/newline-below) ;; move lines around (my/global-map-and-set-key \u0026#34;\u0026lt;M-up\u0026gt;\u0026#34; \u0026#39;drag-stuff-up) (my/global-map-and-set-key \u0026#34;\u0026lt;M-down\u0026gt;\u0026#34; \u0026#39;drag-stuff-down) ;; meta drag (my/global-map-and-set-key \u0026#34;\u0026lt;M-S-up\u0026gt;\u0026#34; \u0026#39;org-shiftmetaup) (my/global-map-and-set-key \u0026#34;\u0026lt;M-S-down\u0026gt;\u0026#34; \u0026#39;org-shiftmetadown) ;; outline promote/demote (metaleft/right) (my/global-map-and-set-key \u0026#34;M-h\u0026#34; \u0026#39;org-metaleft) (my/global-map-and-set-key \u0026#34;M-H\u0026#34; \u0026#39;org-shiftmetaleft) (my/global-map-and-set-key \u0026#34;M-l\u0026#34; \u0026#39;org-metaright) (my/global-map-and-set-key \u0026#34;M-L\u0026#34; \u0026#39;org-shiftmetaright) ;; for evaluating r codes, not sure whether works or not yet (my/global-map-and-set-key \u0026#34;M-d\u0026#34; \u0026#39;evil-multiedit-match-symbol-and-next) ;; currently I disabled arrow keys for navigation, but command(s) + arrow key still work, and in terminal, use shift + arrow keys for normal arrow key behavior ;; use ctrl + hjkl to navigate in function menus (my/global-map-and-set-key \u0026#34;\u0026lt;s-left\u0026gt;\u0026#34; \u0026#39;evil-backward-char) (my/global-map-and-set-key \u0026#34;\u0026lt;s-right\u0026gt;\u0026#34; \u0026#39;evil-forward-char) (my/global-map-and-set-key \u0026#34;\u0026lt;s-down\u0026gt;\u0026#34; \u0026#39;evil-next-line) (my/global-map-and-set-key \u0026#34;\u0026lt;s-up\u0026gt;\u0026#34; \u0026#39;evil-previous-line) ;; create a new delete shortcut for easier access (works in both normal and insert mode) (map! (:after evil :m \u0026#34;s-[\u0026#34; #\u0026#39;evil-delete-backward-char)) (my/global-map-and-set-key \u0026#34;s-[\u0026#34; \u0026#39;evil-delete-backward-char) ;; for ess-r short cut (my/global-map-and-set-key \u0026#34;\u0026lt;C-return\u0026gt;\u0026#34; \u0026#39;ess-eval-line) (my/global-map-and-set-key \u0026#34;\u0026lt;C-S-return\u0026gt;\u0026#34; \u0026#39;ess-eval-region-or-function-or-paragraph) Copy paste from external clipboard (for terminal emacs window) (setq osx-clipboard-mode t) ARCV auto save and load current session layout (desktop)  State \u0026ldquo;ARCV\u0026rdquo; from \u0026ldquo;TODO\u0026rdquo; [2020-06-15 Mon 15:07]   ;; save current window layout and load later: https://emacs.stackexchange.com/questions/2710/switching-between-window-layouts ;; (defvar winstack-stack \u0026#39;() ;; \u0026#34;A Stack holding window configurations. ;; Use `winstack-push\u0026#39; and ;; `winstack-pop\u0026#39; to modify it.\u0026#34;) ;; (defun winstack-push() ;; \u0026#34;Push the current window configuration onto `winstack-stack\u0026#39;.\u0026#34; ;; (interactive) ;; (if (and (window-configuration-p (first winstack-stack)) ;; (compare-window-configurations (first winstack-stack) (current-window-configuration))) ;; (message \u0026#34;Current config already pushed\u0026#34;) ;; (progn (push (current-window-configuration) winstack-stack) ;; (message (concat \u0026#34;pushed \u0026#34; (number-to-string ;; (length (window-list (selected-frame)))) \u0026#34; frame config\u0026#34;))))) ;; (defun winstack-pop() ;; \u0026#34;Pop the last window configuration off `winstack-stack\u0026#39; and apply it.\u0026#34; ;; (interactive) ;; (if (first winstack-stack) ;; (progn (set-window-configuration (pop winstack-stack)) ;; (message \u0026#34;popped\u0026#34;)) ;; (message \u0026#34;End of window stack\u0026#34;))) (use-package psession :config (psession-mode 1)) Org Mode Backends Org directory references: https://lists.gnu.org/archive/html/emacs-orgmode/2009-10/msg00734.html\n(setq org-directory \u0026#34;~/GoogleDrive/MarkdownNotes/MDNotes\u0026#34;) (setq org-agenda-directory \u0026#34;~/GoogleDrive/MarkdownNotes/MDNotes/\u0026#34;) (setq org-agenda-files (directory-files (expand-file-name org-agenda-directory) t \u0026#34;^[^\\.][^#][[:alnum:]]+\\.org$\u0026#34;)) (setq org-default-notes-file (concat org-directory \u0026#34;/notes.org\u0026#34;)) Org keywords and tags Previously I cannot override these settings because I changed setting in M-x cutomization, now I deleted the content in ~/.emacs.d/.local/custom.el and add after! org, then things are fine: https://github.com/hlissner/doom-emacs/issues/546\n(after! org (setq org-todo-keywords \u0026#39;(;; Sequence for TASKS ;; TODO means it\u0026#39;s an item that needs addressing ;; PEND means it\u0026#39;s dependent on something else happening ;; CANC means it\u0026#39;s no longer necessary to finish ;; DONE means it\u0026#39;s complete (sequence \u0026#34;TODO(t@/!)\u0026#34; \u0026#34;PEND(p@/!)\u0026#34; \u0026#34;|\u0026#34; \u0026#34;DONE(d@/!)\u0026#34; \u0026#34;CANC(c@/!)\u0026#34;) ;; Sequence for MULTIMEDIA ;; MARK mark some media for future consuming ;; ING means currently consuming ;; REPO means the media has been consumed, and waiting to be shared in short or long form ;; ARCV media alrady repoed, now archive for future reference (sequence \u0026#34;MARK(m@/!)\u0026#34; \u0026#34;ING(i@/!)\u0026#34; \u0026#34;REPO(r@/!)\u0026#34; \u0026#34;|\u0026#34; \u0026#34;ARCV(a@/!)\u0026#34;) ))) Org setup references: https://github.com/sk8ingdom/.emacs.d/blob/master/org-mode-config/org-todo-states.el\n(after! org ;; prompt to record time and note when a task is completed (setq org-log-done \u0026#39;note) ;; prompt to record time and note when the scheduled date of a task is modified (setq org-log-reschedule \u0026#39;note) ;; promopt to record time and note when the deadline of a task is modified (setq org-log-redeadline \u0026#39;note) ;; promopt to record time and note when clocking out of a task (setq org-log-clock-out \u0026#39;note) (setq org-agenda-todo-ignore-scheduled \u0026#39;all) ;; set the scope of line-editing behavior to the visual line (not actual line) (setq vim-style-visual-line-move-text t) (setq org-src-fontify-natively t org-src-tab-acts-natively t org-confirm-babel-evaluate nil org-edit-src-content-indentation 0) ) (with-eval-after-load \u0026#39;org (add-to-list \u0026#39;org-modules \u0026#39;org-habit t)) Org capture references: https://emacs.stackexchange.com/questions/19391/can-t-set-directory-for-org-mode-capture https://orgmode.org/manual/Template-expansion.html#Template-expansion https://github.com/sk8ingdom/.emacs.d/blob/master/org-mode-config/org-capture-templates.el\n(setq org-capture-templates \u0026#39;( (\u0026#34;t\u0026#34; \u0026#34;Todo\u0026#34; entry (file+headline \u0026#34;~/Googledrive/Markdownnotes/MDNotes/todo.org\u0026#34; \u0026#34;Inbox\u0026#34;) \u0026#34;* TODO %?\\n %U\\n\u0026#34;) (\u0026#34;d\u0026#34; \u0026#34;Drafts\u0026#34; entry (file+headline \u0026#34;~/Googledrive/Markdownnotes/MDNotes/todo.org\u0026#34; \u0026#34;Drafts\u0026#34;) \u0026#34;* ARCV %?\\n %U\\n\u0026#34;) (\u0026#34;j\u0026#34; \u0026#34;Journal\u0026#34; entry (function org-journal-find-location) \u0026#34;* %(format-time-string org-journal-time-format)%^{Title}\\n%i%?\u0026#34;) ) ) org-journal references: https://github.com/bastibe/org-journal\n(customize-set-variable \u0026#39;org-journal-dir \u0026#34;~/GoogleDrive/Markdownnotes/MDNotes/\u0026#34;) (customize-set-variable \u0026#39;org-journal-date-format \u0026#34;%A, %d %B %Y\u0026#34;) (customize-set-variable \u0026#39;org-journal-file-format \u0026#34;%Y%m%d.org\u0026#34;) (require \u0026#39;org-journal) ;; (use-package org-journal ;; :ensure t ;; :defer t ;; :custom ;; (org-journal-dir \u0026#34;~/GoogleDrive/MarkdownNotes/MDNotes/\u0026#34;) ;; (org-journal-file-format \u0026#34;%Y%m%d.org\u0026#34;) ;; (org-journal-date-format \u0026#34;%A, %B %d %Y\u0026#34;)) (defun org-journal-find-location () ;; Open today\u0026#39;s journal, but specify a non-nil prefix argument in order to ;; inhibit inserting the heading; org-capture will insert the heading. (org-journal-new-entry t) ;; Position point on the journal\u0026#39;s top-level heading so that org-capture ;; will add the new entry as a child entry. (goto-char (point-min))) org-babel Write plain text in org mode with embedded source block supported by Babel: active code in Org-mode also see https://orgmode.org/manual/Working-with-Source-Code.html\n(setq org-babel-load-languages \u0026#39;( (emacs-lisp. t) (lisp. t) (sh. t) (org. t) (python. t) (latex. t) (R. t))) ;; activate Babel languages (org-babel-do-load-languages \u0026#39;org-babel-load-languages org-babel-load-languages) (add-hook \u0026#39;org-babel-after-execute-hook \u0026#39;org-display-inline-images) (add-hook \u0026#39;org-mode-hook \u0026#39;org-display-inline-images) Org Mode Looks Change the character that displays on collapsed headings (setq org-ellipsis \u0026#34; ▼ \u0026#34;) Line wrapping ;; visual line mode will wrap lines at the window border without actually insert line breaks (add-hook \u0026#39;org-mode-hook #\u0026#39;visual-line-mode) ;; turn off auto fill mode so there won\u0026#39;t be any hard line breaks after the wrap column (add-hook \u0026#39;org-mode-hook #\u0026#39;turn-off-auto-fill) ;; also add (setq evil-respect-visual-line-mode t) to init.el, enable navigation in visual line mode (evel-next-visual-line) (add-hook \u0026#39;org-mode-hook #\u0026#39;adaptive-wrap-prefix-mode) Org Mode Editing Key binding for showing all todo headings (global-set-key (kbd \u0026#34;C-c t\u0026#34;) \u0026#39;org-show-todo-tree) Key binding for outline quicklook/goto (global-set-key (kbd \u0026#34;C-c r\u0026#34;) \u0026#39;counsel-outline) Key binding for jumping to the end of the line (map! (:after evil :m \u0026#34;C-e\u0026#34; #\u0026#39;doom/forward-to-last-non-comment-or-eol)) Key binding to insert newlines above and below Similar to vim-unimpaired\n(map! (:after evil :m \u0026#34;] SPC\u0026#34; #\u0026#39;evil-motion-insert-newline-below :m \u0026#34;[ SPC\u0026#34; #\u0026#39;evil-motion-insert-newline-above)) Function to duplicate certain line inspired by Sublime Text cmd + shift + d (ref: https://stackoverflow.com/a/88828)\n(defun duplicate-line() (interactive) (move-beginning-of-line 1) (kill-line) (yank) (open-line 1) (forward-line 1) (yank) ) (global-set-key (kbd \u0026#34;C-c D\u0026#34;) \u0026#39;duplicate-line) Function to create new scratch buffer in Org ref: https://emacs.stackexchange.com/questions/16492/is-it-possible-to-create-an-org-mode-scratch-buffer\n(defun org-buffer-new () \u0026#34;Create a new scratch buffer -- \\*hello-world\\*\u0026#34; (interactive) (let ((n 0) bufname buffer) (catch \u0026#39;done (while t (setq bufname (concat \u0026#34;*org-scratch\u0026#34; (if (= n 0) \u0026#34;\u0026#34; (int-to-string n)) \u0026#34;*\u0026#34;)) (setq n (1+ n)) (when (not (get-buffer bufname)) (setq buffer (get-buffer-create bufname)) (with-current-buffer buffer (org-mode)) ;; When called non-interactively, the `t` targets the other window (if it exists). (throw \u0026#39;done (display-buffer buffer t))) )))) ;; SPC x is the default doom new scratch buffer key binding (global-set-key (kbd \u0026#34;C-c x\u0026#34;) \u0026#39;org-buffer-new) Auto update Org toc (if (require \u0026#39;toc-org nil t) (add-hook \u0026#39;org-mode-hook \u0026#39;toc-org-mode) ;; enable in markdown, too (add-hook \u0026#39;markdown-mode-hook \u0026#39;toc-org-mode)) Markdown Mode Looks ;; similar with org mode, use visual line mode without auto fill (add-hook \u0026#39;markdown-mode-hook #\u0026#39;visual-line-mode) (add-hook \u0026#39;markdown-mode-hook #\u0026#39;turn-off-auto-fill) ;; disable syntax checker (markdownlint-cli) for markdown mode (setq-default flycheck-disabled-checkers \u0026#39;(markdown-markdownlint-cli)) Hugo related config references: https://ox-hugo.scripter.co/ https://mstempl.netlify.com/post/static-website-with-emacs-and-hugo/\n(with-eval-after-load \u0026#39;ox (require \u0026#39;ox-hugo)) R related config ESS R config references: https://iqss.github.io/IQSS.emacs/init.html#run%5Fr%5Fin%5Femacs%5F(ess) useful functions: R (run-ess-r), popup/raise, ess-eval-region-or-function-or-paragraph-and-step\n(with-eval-after-load \u0026#34;ess\u0026#34; (add-hook \u0026#39;ess-r-mode-hook (lambda() \u0026#39;eglot-ensure (make-local-variable \u0026#39;company-backends) (delete-dups (push \u0026#39;company-capf company-backends)) (delete-dups (push \u0026#39;company-files company-backends)))) (require \u0026#39;ess-mode) ;; evaluate codes with ctrl + enter (by line) or ctrl + shift + enter (by paragraph) (define-key ess-mode-map (kbd \u0026#34;\u0026lt;C-return\u0026gt;\u0026#34;) \u0026#39;ess-eval-line) (define-key ess-mode-map (kbd \u0026#34;\u0026lt;C-S-return\u0026gt;\u0026#34;) \u0026#39;ess-eval-region-or-function-or-paragraph) ;; define the same keybindings for normal state (otheriwse the keybinding will only work in edit state) (with-eval-after-load \u0026#39;evil-maps (define-key evil-normal-state-map (kbd \u0026#34;\u0026lt;C-return\u0026gt;\u0026#34;) \u0026#39;ess-eval-line)) (with-eval-after-load \u0026#39;evil-maps (define-key evil-normal-state-map (kbd \u0026#34;\u0026lt;C-S-return\u0026gt;\u0026#34;) \u0026#39;ess-eval-region-or-function-or-paragraph)) ;; Set ESS options (setq ess-auto-width \u0026#39;window ess-use-auto-complete nil ess-use-company \u0026#39;t ;; ess-r-package-auto-set-evaluation-env nil inferior-ess-same-window nil ess-indent-with-fancy-comments nil ; don\u0026#39;t indent comments ess-eval-visibly t ; enable echoing input ess-eval-empty t ; don\u0026#39;t skip non-code lines. ess-ask-for-ess-directory nil ; start R in the working directory by default ess-ask-for-ess-directory nil ; start R in the working directory by default ess-R-font-lock-keywords ; font-lock, but not too much (quote ((ess-R-fl-keyword:modifiers) (ess-R-fl-keyword:fun-defs . t) (ess-R-fl-keyword:keywords . t) (ess-R-fl-keyword:assign-ops . t) (ess-R-fl-keyword:constants . 1) (ess-fl-keyword:fun-calls . t) (ess-fl-keyword:numbers) (ess-fl-keyword:operators . t) (ess-fl-keyword:delimiters) (ess-fl-keyword:=) (ess-R-fl-keyword:F\u0026amp;T))))) Combine R and markdown mode in one buffer with polymode (use-package polymode) (use-package poly-R) (use-package poly-markdown :config (add-to-list \u0026#39;auto-mode-alist \u0026#39;(\u0026#34;\\\\.rmd\u0026#34; . poly-markdown+R-mode)) ) (with-eval-after-load \u0026#34;markdown\u0026#34; (use-package poly-markdown)) (with-eval-after-load \u0026#34;org\u0026#34; (use-package poly-org)) "});index.add({'id':4,'href':'/docs/About/','title':"About",'content':"   \\(\\Bbb{MADE}\\enspace\\Bbb{BY}\\enspace\\color{#83A78D}\\mathcal{N}\\negmedspace\\negmedspace\\negthickspace{\\forall}\\)   Who is speaking?  Hi there, this is Naskuv.\nMany tags can be attached to me: gender-queer, born and raised Chinese, a half-made geek plus self-taught scribbler, a young scholar dangling between publish or perish, and an enthusiast with all things quaint yet profound.\nBut none of them will stick.\nPared to the bone, I am just a curious soul that wants to share bits and pieces of thoughts with you.\n Where is this place?  This a collection of short essays on subculture, media, and human mind. They are possibly opinionated but guaranteed to be honest. And on the flip side, I avoid documenting brief passing thoughts, egocentric fantasies, and plain life events. Those writings can be better approached by using social media, personal journal, and a good old diary.\nThis virtual folio starts as a serious writing practice outside academia, an earnest attempt to speak in my real voice about things that resonates with me. Things that maybe trivial and obscure, but at one point, rippled through my stream of consciousness and finds their niche.\nSo it flows. 1\n  The symbols in the website title represent the 59th hexagram in I Ching. It\u0026rsquo;s called 渙 (dispersing), depicting how wind blows water, causing dispersion and regathering in a fluid fashion. 『易經．渙卦．象曰：「風行水上，渙；先王以享于帝立廟。 \u0026#x21a9;\u0026#xfe0e;\n     "});index.add({'id':5,'href':'/docs/','title':"Docs",'content':""});})();